#!/bin/bash
CONFIG_DIR="$HOME/.config/gh-release-checker"
CONFIG_FILE="$CONFIG_DIR/repos.conf"
VERSION_FILE="$CONFIG_DIR/versions"
mkdir -p "$CONFIG_DIR"
[ -f "$VERSION_FILE" ] || touch "$VERSION_FILE"
[ -f "$CONFIG_FILE" ] || touch "$CONFIG_FILE"

# The `read` command returns a non-zero exit status when it encounters the end-of-file without a newline.
# This causes the loop to break without processing the last line.
while read -r repo || [[ -n "$repo" ]]; do
    # Trim any whitespace
    repo="$(echo -n "$repo" | tr -d '\r\n')"

    # Skip empty lines
    if [[ -z "$repo" ]]; then
        continue
    fi

    echo "Checking: $repo..."
    # Fetch latest release from GitHub
    latest_release=$(curl -s "https://api.github.com/repos/$repo/releases/latest" | jq -r .tag_name)

    if [[ -z "$latest_release" ]]; then
        echo "Error: Could not get release for $repo" >&2
        continue
    fi

    echo "Latest: $latest_release"

    # Check stored version
    stored_version=$(grep "$repo" "$VERSION_FILE" | cut -d' ' -f2)

    # Compare versions
    if [ "$latest_release" != "$stored_version" ]; then
        # Terminal message
        echo -e "\033[1;31mNEW RELEASE:\033[0m $repo - \033[1;33m$latest_release\033[0m"

        # Desktop notification
        notify-send "New Release: $repo" "Version: $latest_release"

        # Update version file (using | delimiter)
        sed -i "\|^$repo |d" "$VERSION_FILE"
        echo "$repo $latest_release" >>"$VERSION_FILE"
    fi
done <"$CONFIG_FILE"
